{"ast":null,"code":"import _defineProperty from\"/home/vaibhav/repos/Generate_memes/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/home/vaibhav/repos/Generate_memes/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/vaibhav/repos/Generate_memes/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Meme(){/**\n     * Challenge: \n     * Try to figure out why our code is broken! ðŸ˜ž\n     * \n     * Hint: it has to do with the difference between\n     * what we were importing before from memesData.js\n     * and what we're setting our state as with `allMemes`\n     */var _React$useState=React.useState({topText:\"\",bottomText:\"\",randomImage:\"http://i.imgflip.com/1bij.jpg\"}),_React$useState2=_slicedToArray(_React$useState,2),meme=_React$useState2[0],setMeme=_React$useState2[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),allMemes=_React$useState4[0],setAllMemes=_React$useState4[1];React.useEffect(function(){fetch(\"https://api.imgflip.com/get_memes\").then(function(res){return res.json();}).then(function(data){return setAllMemes(data.data.memes);});},[]);function getMemeImage(){var randomNumber=Math.floor(Math.random()*allMemes.length);var url=allMemes[randomNumber].url;setMeme(function(prevMeme){return _objectSpread(_objectSpread({},prevMeme),{},{randomImage:url});});}function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setMeme(function(prevMeme){return _objectSpread(_objectSpread({},prevMeme),{},_defineProperty({},name,value));});}return/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Top text\",className:\"form--input\",name:\"topText\",value:meme.topText,onChange:handleChange}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Bottom text\",className:\"form--input\",name:\"bottomText\",value:meme.bottomText,onChange:handleChange}),/*#__PURE__*/_jsx(\"button\",{className:\"form--button\",onClick:getMemeImage,children:\"Get a new meme image \\uD83D\\uDDBC\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"meme\",children:[/*#__PURE__*/_jsx(\"img\",{src:meme.randomImage,className:\"meme--image\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"meme--text top\",children:meme.topText}),/*#__PURE__*/_jsx(\"h2\",{className:\"meme--text bottom\",children:meme.bottomText})]})]});}","map":{"version":3,"names":["React","Meme","useState","topText","bottomText","randomImage","meme","setMeme","allMemes","setAllMemes","useEffect","fetch","then","res","json","data","memes","getMemeImage","randomNumber","Math","floor","random","length","url","prevMeme","handleChange","event","target","name","value"],"sources":["/home/vaibhav/repos/Generate_memes/src/components/Main.js"],"sourcesContent":["import React from \"react\"\n\nexport default function Meme() {\n    /**\n     * Challenge: \n     * Try to figure out why our code is broken! ðŸ˜ž\n     * \n     * Hint: it has to do with the difference between\n     * what we were importing before from memesData.js\n     * and what we're setting our state as with `allMemes`\n     */\n    \n    const [meme, setMeme] = React.useState({\n        topText: \"\",\n        bottomText: \"\",\n        randomImage: \"http://i.imgflip.com/1bij.jpg\" \n    })\n    const [allMemes, setAllMemes] = React.useState([])\n    \n    React.useEffect(() => {\n        fetch(\"https://api.imgflip.com/get_memes\")\n            .then(res => res.json())\n            .then(data => setAllMemes(data.data.memes))\n    }, [])\n    \n    function getMemeImage() {\n        const randomNumber = Math.floor(Math.random() * allMemes.length)\n        const url = allMemes[randomNumber].url\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            randomImage: url\n        }))\n        \n    }\n    \n    function handleChange(event) {\n        const {name, value} = event.target\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            [name]: value\n        }))\n    }\n    \n    return (\n        <main>\n            <div className=\"form\">\n                <input \n                    type=\"text\"\n                    placeholder=\"Top text\"\n                    className=\"form--input\"\n                    name=\"topText\"\n                    value={meme.topText}\n                    onChange={handleChange}\n                />\n                <input \n                    type=\"text\"\n                    placeholder=\"Bottom text\"\n                    className=\"form--input\"\n                    name=\"bottomText\"\n                    value={meme.bottomText}\n                    onChange={handleChange}\n                />\n                <button \n                    className=\"form--button\"\n                    onClick={getMemeImage}\n                >\n                    Get a new meme image ðŸ–¼\n                </button>\n            </div>\n            <div className=\"meme\">\n                <img src={meme.randomImage} className=\"meme--image\" />\n                <h2 className=\"meme--text top\">{meme.topText}</h2>\n                <h2 className=\"meme--text bottom\">{meme.bottomText}</h2>\n            </div>\n        </main>\n    )\n}"],"mappings":"yWAAA,MAAOA,MAAK,KAAM,OAAO,yFAEzB,cAAe,SAASC,KAAI,EAAG,CAC3B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,OAEI,oBAAwBD,KAAK,CAACE,QAAQ,CAAC,CACnCC,OAAO,CAAE,EAAE,CACXC,UAAU,CAAE,EAAE,CACdC,WAAW,CAAE,+BACjB,CAAC,CAAC,oDAJKC,IAAI,qBAAEC,OAAO,qBAKpB,qBAAgCP,KAAK,CAACE,QAAQ,CAAC,EAAE,CAAC,qDAA3CM,QAAQ,qBAAEC,WAAW,qBAE5BT,KAAK,CAACU,SAAS,CAAC,UAAM,CAClBC,KAAK,CAAC,mCAAmC,CAAC,CACrCC,IAAI,CAAC,SAAAC,GAAG,QAAIA,IAAG,CAACC,IAAI,EAAE,GAAC,CACvBF,IAAI,CAAC,SAAAG,IAAI,QAAIN,YAAW,CAACM,IAAI,CAACA,IAAI,CAACC,KAAK,CAAC,GAAC,CACnD,CAAC,CAAE,EAAE,CAAC,CAEN,QAASC,aAAY,EAAG,CACpB,GAAMC,aAAY,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,CAAGb,QAAQ,CAACc,MAAM,CAAC,CAChE,GAAMC,IAAG,CAAGf,QAAQ,CAACU,YAAY,CAAC,CAACK,GAAG,CACtChB,OAAO,CAAC,SAAAiB,QAAQ,wCACTA,QAAQ,MACXnB,WAAW,CAAEkB,GAAG,IAClB,CAAC,CAEP,CAEA,QAASE,aAAY,CAACC,KAAK,CAAE,CACzB,kBAAsBA,KAAK,CAACC,MAAM,CAA3BC,IAAI,eAAJA,IAAI,CAAEC,KAAK,eAALA,KAAK,CAClBtB,OAAO,CAAC,SAAAiB,QAAQ,wCACTA,QAAQ,wBACVI,IAAI,CAAGC,KAAK,IACf,CAAC,CACP,CAEA,mBACI,qCACI,aAAK,SAAS,CAAC,MAAM,wBACjB,cACI,IAAI,CAAC,MAAM,CACX,WAAW,CAAC,UAAU,CACtB,SAAS,CAAC,aAAa,CACvB,IAAI,CAAC,SAAS,CACd,KAAK,CAAEvB,IAAI,CAACH,OAAQ,CACpB,QAAQ,CAAEsB,YAAa,EACzB,cACF,cACI,IAAI,CAAC,MAAM,CACX,WAAW,CAAC,aAAa,CACzB,SAAS,CAAC,aAAa,CACvB,IAAI,CAAC,YAAY,CACjB,KAAK,CAAEnB,IAAI,CAACF,UAAW,CACvB,QAAQ,CAAEqB,YAAa,EACzB,cACF,eACI,SAAS,CAAC,cAAc,CACxB,OAAO,CAAER,YAAa,+CAGjB,GACP,cACN,aAAK,SAAS,CAAC,MAAM,wBACjB,YAAK,GAAG,CAAEX,IAAI,CAACD,WAAY,CAAC,SAAS,CAAC,aAAa,EAAG,cACtD,WAAI,SAAS,CAAC,gBAAgB,UAAEC,IAAI,CAACH,OAAO,EAAM,cAClD,WAAI,SAAS,CAAC,mBAAmB,UAAEG,IAAI,CAACF,UAAU,EAAM,GACtD,GACH,CAEf"},"metadata":{},"sourceType":"module"}